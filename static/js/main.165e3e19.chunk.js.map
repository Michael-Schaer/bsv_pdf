{"version":3,"sources":["components/Layout.module.css","models/advisor.ts","models/attendance.ts","models/course.ts","components/DSVImport.tsx","models/import_data.ts","components/CourseTable.tsx","components/AdvisorTable.tsx","components/Layout.tsx","views/MainView.tsx","images/signature.png","components/Advisor/AdvisorStatementPdf.tsx","views/AdivsorStatementPdfView.tsx","App.tsx","index.tsx","components/Advisor/AdvisorStatementPdf.module.css"],"names":["module","exports","Advisor","id","firstName","lastName","scoutName","address","zipcode","town","country","email","salutation","this","Attendance","days","count","participationsString","split","map","participationString","values","NoCourseNumberError","Error","CourseNumber","courseNumberString","cantonalAssociation","regionalAssociation","year","kind","countNumber","match","RegExp","exec","transform","data","advisors","courses","reduce","result","tupel","advisorId","newAdvisor","extractAdvisor","advisor","course","agreementIdFiver","courseIdFiver","courseNumber","firstCourseDate","lastCourseDate","location","trainingDays","bsvDays","bsvEligibleParticipationsCount","bsvEligibleAttendances","bsvEligibleAttendance","fromAttendanceSummary","leaderCount","allParticipantsCount","allParticipantsAttendanceSummary","allParticipantsAttendances","allParticipantsAttendance","cantonsCount","languagesCount","e","extractCourse","push","DSVImport","onChange","reader","FileReader","onload","event","parse","target","complete","type","file","files","readAsText","CourseTable","toString","AdvisorTable","to","Math","random","Container","children","className","styles","container","MainView","onDataImport","onAmountChange","onYearChange","useContext","AppContext","amountPerCourse","value","step","parseFloat","parseInt","Object","AdvisorStatementPdf","document","title","table","right","toFixed","length","signature","src","alt","AdvisorStatementPdfView","useParams","onClick","window","print","filter","defaultAppState","Date","getFullYear","createContext","App","useState","state","setState","Provider","basename","process","path","prev","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.165e3e19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3pAzR\"};","export class Advisor {\n  id: string;\n  firstName: string;\n  lastName: string;\n  scoutName: string;\n  address: string;\n  zipcode: string;\n  town: string;\n  country: string;\n  email: string;\n  salutation: string;\n\n  constructor(id: string, firstName: string, lastName: string, scoutName: string, address: string, zipcode: string, town: string, country: string, email: string, salutation: string) {\n    this.id = id\n    this.firstName = firstName\n    this.lastName = lastName\n    this.scoutName = scoutName\n    this.address = address\n    this.zipcode = zipcode\n    this.town = town\n    this.country = country\n    this.email = email\n    this.salutation = salutation\n  }\n\n  toString() {\n    return `${this.firstName} ${this.lastName} / ${this.scoutName}`\n  }\n}\n\n\nexport type AdvisorMap = { [key: string]: Advisor }\n","\nexport class Attendance {\n  days: number\n  count: number\n\n  constructor(days: number = 0, count: number = 0) {\n    this.count = count\n    this.days = days\n  }\n\n  total() {\n    return this.days * this.count\n  }\n\n  static fromAttendanceSummary(participationsString: string): Attendance[] {\n    return participationsString.split(',').map(participationString => {\n      const values = participationString.split('x')\n      return new Attendance(+values[0], +values[1])\n    })\n  }\n}\n\n","import { Advisor } from './advisor'\nimport { Attendance } from './attendance';\n\nexport class NoCourseNumberError extends Error {\n}\n\nexport class CourseNumber {\n  cantonalAssociation?: string;\n  regionalAssociation: string\n  year: number\n  kind: number\n  countNumber: number\n\n  constructor(courseNumberString: string) {\n    const regex = new RegExp(/PBS\\s?(CH)?\\s([a-zA-Z]{2})?\\s?(?<kind>\\d)(?<regionalAssociation>\\d)(?<countNumber>\\d)-(?<year>\\d{2})/, 'i')\n    const match = regex.exec(courseNumberString)\n    if (!match) throw new NoCourseNumberError('Not a course number')\n\n    this.cantonalAssociation = match[2]\n    this.kind = +match[3]\n    this.regionalAssociation = match[4]\n    this.countNumber = +match[5]\n    this.year = +match[6]\n  }\n\n  toString(): string {\n    const cantonalAssociation = this.cantonalAssociation ? `${this.cantonalAssociation} ` : ''\n    return `PBS CH ${cantonalAssociation}${this.kind}${this.regionalAssociation}${this.countNumber}-${this.year}`\n  }\n}\n\nexport type Course = {\n  agreementIdFiver: string;\n  courseIdFiver: string;\n  kind: string;\n  courseNumber: CourseNumber;\n  firstCourseDate: string;\n  lastCourseDate: string;\n  location: string;\n  trainingDays: string;\n  bsvDays: string;\n  bsvEligibleParticipationsCount: string;\n  bsvEligibleAttendances: string;\n  bsvEligibleAttendance: Attendance[];\n  leaderCount: string;\n  allParticipantsCount: string;\n  allParticipantsAttendanceSummary: string;\n  allParticipantsAttendances: string;\n  allParticipantsAttendance: Attendance[];\n  cantonsCount: string;\n  languagesCount: string;\n  advisor?: Advisor;\n}\n","import React from 'react';\nimport { extractAdvisor, extractCourse, ImportTupel } from '../models/import_data'\nimport { AdvisorMap } from '../models/advisor';\nimport { Course } from '../models/course';\nimport { parse } from 'papaparse';\n\nexport type ImportResult = {\n  courses: Course[];\n  advisors: AdvisorMap;\n}\n\nconst transform = (data: ImportTupel[]): ImportResult => {\n  const advisors: AdvisorMap = {}\n  const courses: Course[] = data.reduce((result: Course[], tupel) => {\n    const advisorId = tupel[20]\n    if (!advisors[advisorId]) {\n      const newAdvisor = extractAdvisor(tupel);\n      newAdvisor && (advisors[advisorId] = newAdvisor)\n    }\n    const advisor = advisors[advisorId];\n    const course = extractCourse(tupel)\n    course && result.push({ advisor, ...course })\n    return result\n  }, [])\n\n  return { courses, advisors }\n}\n\nexport interface Props {\n  onChange?: (value: ImportResult) => void;\n}\n\nexport const DSVImport = ({ onChange }: Props): React.ReactElement<Props> => {\n\n  const reader = new FileReader()\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target?.files && event.target.files[0]\n    file && reader.readAsText(file, 'iso88591');\n  };\n  reader.onload = (event) => {\n    parse(event.target?.result as string, {\n      complete: ({ data }: { data: ImportTupel[] }) => {\n        onChange && onChange(transform(data));\n      }\n    });\n  }\n\n  return <input type=\"file\" onChange={handleChange} />;\n};\n\n","import { Advisor } from \"./advisor\";\nimport { Attendance } from \"./attendance\";\nimport { Course, CourseNumber, NoCourseNumberError } from \"./course\";\n\nexport function getAdvisorId(tupel: ImportTupel): string {\n  return tupel[20]\n}\n\nexport type ImportTupel = [\n  string, string, string, string, string, string, string, string, string, string,\n  string, string, string, string, string, string, string, string, string, string,\n  string, string, string, string, string, string, string, string, string, string\n]\n\nexport function extractCourse(tupel: ImportTupel): Course | null {\n  try {\n    return {\n      agreementIdFiver: tupel[0],\n      courseIdFiver: tupel[1],\n      kind: tupel[2],\n      courseNumber: new CourseNumber(tupel[5]),\n      firstCourseDate: tupel[6],\n      lastCourseDate: tupel[7],\n      location: tupel[8],\n      trainingDays: tupel[9],\n      bsvDays: tupel[10],\n      bsvEligibleParticipationsCount: tupel[11],\n      bsvEligibleAttendances: tupel[13],\n      bsvEligibleAttendance: Attendance.fromAttendanceSummary(tupel[12]),\n      leaderCount: tupel[14],\n      allParticipantsCount: tupel[15],\n      allParticipantsAttendanceSummary: tupel[16],\n      allParticipantsAttendances: tupel[17],\n      allParticipantsAttendance: Attendance.fromAttendanceSummary(tupel[16]),\n      cantonsCount: tupel[18],\n      languagesCount: tupel[19]\n    }\n  } catch (e) {\n    if (e instanceof NoCourseNumberError) {\n      return null;\n    }\n    else {\n      throw e;\n    }\n  }\n}\n\nexport function extractAdvisor(tupel: ImportTupel): Advisor | null {\n  if (!tupel[20]) return null;\n  return new Advisor(\n    tupel[20],\n    tupel[21],\n    tupel[22],\n    tupel[23],\n    tupel[24],\n    tupel[25],\n    tupel[26],\n    tupel[27],\n    tupel[28],\n    tupel[29]);\n}\n","import React, { ReactElement } from 'react'\nimport { Course } from '../models/course'\n\ntype CourseTableProps = {\n  courses: Course[];\n}\n\nexport const CourseTable = ({ courses }: CourseTableProps): ReactElement => {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {courses.map(course => (\n          <tr key={course.courseNumber.toString()}>\n            <td>{course.courseNumber.toString()}</td>\n            <td>{course.courseNumber.cantonalAssociation}</td>\n            <td>{course.kind}</td>\n            <td>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { Advisor } from '../models/advisor'\nimport { Link } from 'react-router-dom'\n\ntype Props = {\n  advisors: Advisor[];\n}\n\nexport function AdvisorTable({ advisors }: Props): ReactElement {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {advisors.map(advisor => (\n          <tr key={advisor.id || Math.random() * 10000000}>\n            <td>{advisor.toString()}</td>\n            <td><Link to={`/advisors/${advisor.id}`}>PDF</Link></td>\n          </tr>\n        ))}\n      </tbody>\n    </table >\n  )\n}\n","import styles from './Layout.module.css'\nimport React, { FunctionComponent } from 'react'\n\nexport const Container: FunctionComponent<{}> = ({ children }) => {\n  return (<div className={styles.container}>{children}</div>)\n}\n","import React, { FunctionComponent, useContext } from 'react';\nimport { DSVImport, ImportResult } from '../components/DSVImport';\nimport { CourseTable } from '../components/CourseTable';\nimport { AdvisorTable } from '../components/AdvisorTable';\nimport { AppContext } from '../App';\nimport { Container } from '../components/Layout';\n\nexport interface MainViewProps {\n  onDataImport?(value: ImportResult): void\n  onAmountChange?(value: number): void\n  onYearChange?(value: number): void\n}\n\nexport const MainView: FunctionComponent<MainViewProps> = ({ onDataImport, onAmountChange, onYearChange }) => {\n  const { courses, advisors, amountPerCourse, year } = useContext(AppContext);\n\n  return (\n    <Container>\n      <div>\n        <h1>BSV PDF</h1>\n        <DSVImport onChange={(value) => onDataImport && onDataImport(value)}></DSVImport>\n        <input type=\"number\" step=\"0.1\" value={amountPerCourse} onChange={(event) => onAmountChange && onAmountChange(parseFloat(event.target.value))} />\n        <input type=\"number\" step=\"1\" value={year} onChange={(event) => onYearChange && onYearChange(parseInt(event.target.value))} />\n        <h2>Kurse</h2>\n        <CourseTable courses={courses}></CourseTable>\n        <h2>LKB</h2>\n        <AdvisorTable advisors={Object.values(advisors)}></AdvisorTable>\n      </div>\n    </Container >\n  );\n}\n\nexport default MainView;\n","export default __webpack_public_path__ + \"static/media/signature.efb88629.png\";","import React, { ReactElement } from 'react';\nimport signature from '../../images/signature.png'\nimport styles from './AdvisorStatementPdf.module.css'\nimport { AdvisorStatement } from '../../models/advisor_statement'\n\nexport function AdvisorStatementPdf({ advisor, courses, year, amountPerCourse }: AdvisorStatement): ReactElement {\n  return (\n    <div className={styles.document}>\n      <p>\n        {`${advisor.firstName} ${advisor.lastName}`}<br />\n        {`${advisor.address}`}<br />\n        {`${advisor.zipcode} ${advisor.town} ${advisor.country}`}<br />\n      </p>\n      <h1 className={styles.title}>{`LKB Entschädigung ${year}`}</h1>\n      <p>{advisor.salutation}</p>\n      <p>{\"Im vergangenen Jahr hast Du die unten aufgeführten Kurse betreut. Dafür erhälst Du heute die LKB Entschädigung.\"}</p>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>{'Kursschlüssel'}</th>\n            <th>{'Kursart J+S LS/T'}</th>\n            <th>{'PBS Kursart'}</th>\n            <th className={styles.right}>{'Entschädigung'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map<ReactElement>(course => {\n            return (<tr>\n              <td>{course.courseNumber.toString()}</td>\n              <td>{course.kind}</td>\n              <td>{course.kind}</td>\n              <td className={styles.right}>{amountPerCourse.toFixed(2)}</td>\n            </tr>)\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>{'Total'}</td>\n            <td className={styles.right}>{(courses.length * amountPerCourse).toFixed(2)}</td>\n          </tr>\n        </tfoot>\n      </table>\n      <p>{\"Nochmals besten Dank für Deinen Einsatz als Leiterkursbetreuer sowie für die Begeisterung und die Zeit, die Du dafür einsetzt. Ich hoffe sehr, dass wir auch in Zukunft auf Deine Hilfe zählen können.\"}</p>\n      <p>{\"Mit herzlichen Pfadigrüssen\"}</p>\n      <img className={styles.signature} src={signature} alt=\"Signature\" />\n      <p>\n        {`Sonja Dietrich`}<br />\n        {\"Ausbildungssekretariat PBS\"}<br />\n        {\"Direktwahl: 031 328 05 42\"}<br />\n        {\"E-Mail: sonja.dietrich@pbs.ch\"}\n      </p>\n    </div >\n  )\n}\n\n\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport { AppState, AppContext } from \"../App\";\nimport { AdvisorStatementPdf } from \"../components/Advisor/AdvisorStatementPdf\";\n\nexport type AdvisorStatementPdfViewParams = {\n  id: string;\n}\n\nexport const AdvisorStatementPdfView: FunctionComponent<{}> = () => {\n  const { id } = useParams<AdvisorStatementPdfViewParams>()\n  const { courses, advisors, amountPerCourse, year } = useContext<AppState>(AppContext)\n  const advisor = advisors[id]\n\n  return (\n    <>\n      <div className=\"no-print\">\n        <Link to=\"/\">Back</Link>\n        <button onClick={() => window.print()}>Print</button>\n      </div>\n\n      {advisor && <AdvisorStatementPdf advisor={advisor} courses={courses.filter(course => course.advisor?.id === advisor.id)} year={year} amountPerCourse={amountPerCourse}></AdvisorStatementPdf>}\n    </>\n  )\n}\n","import React, { useState, createContext, FunctionComponent } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport MainView from './views/MainView';\nimport { AdvisorMap } from \"./models/advisor\"\nimport { Course } from \"./models/course\"\nimport { ImportResult } from './components/DSVImport';\nimport { AdvisorStatementPdfView } from './views/AdivsorStatementPdfView';\nimport './App.css'\n\nexport type AppState = {\n  courses: Course[];\n  advisors: AdvisorMap;\n  amountPerCourse: number;\n  year: number;\n}\n\nexport const defaultAppState = { courses: [], advisors: {}, amountPerCourse: 10.0, year: (new Date()).getFullYear() }\n\nexport const AppContext = createContext<AppState>(defaultAppState)\n\nexport const App: FunctionComponent = () => {\n  const [state, setState] = useState<AppState>(defaultAppState);\n  const handleDataImport = (value: ImportResult) => setState((prev) => ({ ...prev, ...value }));\n  const handleYearChange = (value: number) => setState((prev) => ({ ...prev, year: value }));\n  const handleAmountChange = (value: number) => setState((prev) => ({ ...prev, amountPerCourse: value }));\n\n  return (\n    <AppContext.Provider value={state}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/advisors/:id\" children={<AdvisorStatementPdfView></AdvisorStatementPdfView>}></Route>\n          <Route children={<MainView onYearChange={handleYearChange} onAmountChange={handleAmountChange} onDataImport={handleDataImport}></MainView>}></Route>\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"AdvisorStatementPdf_document__3aSbO\",\"title\":\"AdvisorStatementPdf_title__1VpJQ\",\"signature\":\"AdvisorStatementPdf_signature__g1MHp\",\"table\":\"AdvisorStatementPdf_table__3Mk2g\",\"right\":\"AdvisorStatementPdf_right__sgSDW\"};"],"sourceRoot":""}